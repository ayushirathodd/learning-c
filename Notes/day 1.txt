The task of processing of data is accomplished by executing a sequence of precise instructions
known as program.

CHARACTERS IN C=
letters
digits
special char
white spaces

Individual words and punctuation marks are called tokens.
In a C program the smallest individual units are known as C tokens.
1.keywords-float,white
2.identifiers-main,amt
3.constants 100,-15.5
4.strings-"ABC","year"
5.special syms [] {}
6.operators + - , *

KEYWORDS AND IDENTIFIERS
every c word is either "
all keywords have fixed meanings and these meanings cannot be changed.
keywords serve as basic building blocks for program statms.
" written in lowercase only.

i:
refers to the names of var,func nd arrays.
these are user defined names nd consist of seq of letters nd digits,with a letter asa first char.
lower nd upper case letters, underscore(link b/w 2 longwords)goes.

VARIABLES
" is a data name used to store a data value.
unlike constants, var may take diff value at diff times during execution.

eg. Ayushi 
priti 
A_rath 
ayushi20

rules for variables[identifiers]
1] 1st char alp or undersc
2]only letters, digits nd _
3] only first 31 char significant
4]cannot use keyword
5] not contain white space.

DAY 2=

CONSTANTS:
fixed values that do not change during the execution of program.

constants=
1.numeric: 1]integer
		  2]real
2.char: 	 1]single char 
		2] string


1.1]
sequence of digits
3 types of int=
deci: set of digits o thru 9,+ or -  (eg. 34 -56 0)
hexadeci: seq of dig" preceded by 0x or 0X, include A or a to F or f, this a to f represents no.s 10 thru 15
                (eg. 0x2 0X9F OXabc)
octal: any combination of digits from the set 0 thru 7 WITH A LEADING 0.
         eg.(045 0 020)

largest int value
32767 on 16 bit machines
2147483647 on 32"

for more larger int cons by appending qualifiers such as U,L and UL
eg.(56798U or 56798u
      57l or 45L
     46UL or 578ul)

1.2]
inadequate to represent quantities
so it is represented by no.s conatining fractional parts like 17.548.
(floating point)

real no. can be expressed in exponential notation.
eg. 215.65 can be written as 2.1565e2 in "

e2 MEANS MULTIPLY 10SQUARE
GEN FORM= mantissa e exponent

manitissa= real no. express in deci notation or int
exponent= int no. with opt plus or minus sign.
white space , comma not
upper lower allowed
legal floating point constants eg.= 0.65e4   1.5e+5  -1.2E-1

exponential notation used to express very large or very small in magnitude
eg. 7500000000 can be written as 7.5E9 OR 75E8
    -0.000000368 "     as -3.68E-7

THE SUFFIXES F or f MAY BE USED TO FORCE SINGLE PRECISION ND L OR l TO EXTEND DOUBLE PRECISION FURTHER.

1.3]
a single char constant closed within a pair of single quote marks.
eg. '5'  'X'  ';' ''
'5' not same as 5 .
it has integer vales ASCII values
eg. printf("%d",'a');  output= 97
printf("%c",'97');  output= a

1.4]
a seq of chars enclosed in double quotes.
chars can be letts,no.s,spe chars, blnk space
eg. "hello!"
"5+3"
"a" not equival to single char a.

 BACKSLASH CHAR CONS=(escape seq)
used in output func.
eg. \n

DATETYPES:
1. primary or fundamental
2. derived
3. user defined 

1.
1] integer
2]character 
3] floating point
4] double precision floating point
5]void

1.1]
1) short int 2) int 3) long int



























